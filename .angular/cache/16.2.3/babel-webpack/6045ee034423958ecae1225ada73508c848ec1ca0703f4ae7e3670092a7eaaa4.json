{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet AppComponent = class AppComponent {\n  constructor(listItemsService) {\n    this.listItemsService = listItemsService;\n    this.loading = false;\n    this.toDoListChecked = 'to-do-list-checked';\n  }\n  ngOnInit() {\n    this.getAllLists();\n    this.onLoading();\n  }\n  getAllLists() {\n    this.gettingListItemsKitchen();\n    this.gettingListItemsRoom();\n    this.gettingListItemsServiceArea();\n    this.gettingListItemsBathroom();\n  }\n  gettingListItemsKitchen() {\n    this.listItemsService.getListKitchen().subscribe(items => {\n      this.itemsKitchen = items;\n    });\n  }\n  gettingListItemsRoom() {\n    this.listItemsService.getListRoom().subscribe(items => {\n      this.itemsRoom = items;\n    });\n  }\n  gettingListItemsServiceArea() {\n    this.listItemsService.getListServiceArea().subscribe(items => {\n      this.itemsServiceArea = items;\n    });\n  }\n  gettingListItemsBathroom() {\n    this.listItemsService.getListBathroom().subscribe(items => {\n      this.itemsBathroom = items;\n    });\n  }\n  updatingItem(id, value) {\n    this.onLoading();\n    if (value == true) {\n      this.listItemsService.updateItem(id, value = false);\n    } else {\n      this.listItemsService.updateItem(id, value = true);\n    }\n    this.getAllLists();\n  }\n  onLoading() {\n    setTimeout(() => {\n      this.loading = true;\n      console.log(this.loading);\n    }, 5000);\n  }\n};\nAppComponent = __decorate([Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.sass']\n})], AppComponent);\nexport { AppComponent };","map":{"version":3,"names":["Component","AppComponent","constructor","listItemsService","loading","toDoListChecked","ngOnInit","getAllLists","onLoading","gettingListItemsKitchen","gettingListItemsRoom","gettingListItemsServiceArea","gettingListItemsBathroom","getListKitchen","subscribe","items","itemsKitchen","getListRoom","itemsRoom","getListServiceArea","itemsServiceArea","getListBathroom","itemsBathroom","updatingItem","id","value","updateItem","setTimeout","console","log","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\Daniel\\Documents\\Open House\\openhouse-frontend\\src\\app\\app.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ListItemsService } from './service/list-items.service';\nimport { ListItemsModel } from './model/list-items.model';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.sass'],\n})\nexport class AppComponent implements OnInit {\n  itemsKitchen!: ListItemsModel[];\n  itemsRoom!: ListItemsModel[];\n  itemsServiceArea!: ListItemsModel[];\n  itemsBathroom!: ListItemsModel[];\n  loading: boolean = false;\n  toDoListChecked: string = 'to-do-list-checked';\n\n  constructor(\n    public listItemsService: ListItemsService,\n  ) { }\n\n  ngOnInit(): void {\n    this.getAllLists();\n    this.onLoading();\n  }\n\n  getAllLists(): void {\n    this.gettingListItemsKitchen();\n    this.gettingListItemsRoom();\n    this.gettingListItemsServiceArea();\n    this.gettingListItemsBathroom();\n  }\n\n  gettingListItemsKitchen(): void {\n    this.listItemsService.getListKitchen().subscribe(items => {\n      this.itemsKitchen = items;\n    });\n  }\n\n  gettingListItemsRoom(): void {\n    this.listItemsService.getListRoom().subscribe(items => {\n      this.itemsRoom = items;\n    });\n  }\n\n  gettingListItemsServiceArea(): void {\n    this.listItemsService.getListServiceArea().subscribe(items => {\n      this.itemsServiceArea = items;\n    });\n  }\n\n  gettingListItemsBathroom(): void {\n    this.listItemsService.getListBathroom().subscribe(items => {\n      this.itemsBathroom = items;\n    });\n  }\n\n  updatingItem(id: any, value: any): void {\n\n    this.onLoading();\n\n    if (value == true) {\n      this.listItemsService.updateItem(id, value = false);\n    } else {\n      this.listItemsService.updateItem(id, value = true);\n    }\n\n    this.getAllLists();\n  }\n\n  onLoading() {\n    setTimeout(() => {\n      this.loading = true;\n      console.log(this.loading);\n    }, 5000);\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAS1C,IAAMC,YAAY,GAAlB,MAAMA,YAAY;EAQvBC,YACSC,gBAAkC;IAAlC,KAAAA,gBAAgB,GAAhBA,gBAAgB;IAJzB,KAAAC,OAAO,GAAY,KAAK;IACxB,KAAAC,eAAe,GAAW,oBAAoB;EAI1C;EAEJC,QAAQA,CAAA;IACN,IAAI,CAACC,WAAW,EAAE;IAClB,IAAI,CAACC,SAAS,EAAE;EAClB;EAEAD,WAAWA,CAAA;IACT,IAAI,CAACE,uBAAuB,EAAE;IAC9B,IAAI,CAACC,oBAAoB,EAAE;IAC3B,IAAI,CAACC,2BAA2B,EAAE;IAClC,IAAI,CAACC,wBAAwB,EAAE;EACjC;EAEAH,uBAAuBA,CAAA;IACrB,IAAI,CAACN,gBAAgB,CAACU,cAAc,EAAE,CAACC,SAAS,CAACC,KAAK,IAAG;MACvD,IAAI,CAACC,YAAY,GAAGD,KAAK;IAC3B,CAAC,CAAC;EACJ;EAEAL,oBAAoBA,CAAA;IAClB,IAAI,CAACP,gBAAgB,CAACc,WAAW,EAAE,CAACH,SAAS,CAACC,KAAK,IAAG;MACpD,IAAI,CAACG,SAAS,GAAGH,KAAK;IACxB,CAAC,CAAC;EACJ;EAEAJ,2BAA2BA,CAAA;IACzB,IAAI,CAACR,gBAAgB,CAACgB,kBAAkB,EAAE,CAACL,SAAS,CAACC,KAAK,IAAG;MAC3D,IAAI,CAACK,gBAAgB,GAAGL,KAAK;IAC/B,CAAC,CAAC;EACJ;EAEAH,wBAAwBA,CAAA;IACtB,IAAI,CAACT,gBAAgB,CAACkB,eAAe,EAAE,CAACP,SAAS,CAACC,KAAK,IAAG;MACxD,IAAI,CAACO,aAAa,GAAGP,KAAK;IAC5B,CAAC,CAAC;EACJ;EAEAQ,YAAYA,CAACC,EAAO,EAAEC,KAAU;IAE9B,IAAI,CAACjB,SAAS,EAAE;IAEhB,IAAIiB,KAAK,IAAI,IAAI,EAAE;MACjB,IAAI,CAACtB,gBAAgB,CAACuB,UAAU,CAACF,EAAE,EAAEC,KAAK,GAAG,KAAK,CAAC;KACpD,MAAM;MACL,IAAI,CAACtB,gBAAgB,CAACuB,UAAU,CAACF,EAAE,EAAEC,KAAK,GAAG,IAAI,CAAC;;IAGpD,IAAI,CAAClB,WAAW,EAAE;EACpB;EAEAC,SAASA,CAAA;IACPmB,UAAU,CAAC,MAAK;MACd,IAAI,CAACvB,OAAO,GAAG,IAAI;MACnBwB,OAAO,CAACC,GAAG,CAAC,IAAI,CAACzB,OAAO,CAAC;IAC3B,CAAC,EAAE,IAAI,CAAC;EACV;CACD;AAnEYH,YAAY,GAAA6B,UAAA,EALxB9B,SAAS,CAAC;EACT+B,QAAQ,EAAE,UAAU;EACpBC,WAAW,EAAE,sBAAsB;EACnCC,SAAS,EAAE,CAAC,sBAAsB;CACnC,CAAC,C,EACWhC,YAAY,CAmExB;SAnEYA,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}
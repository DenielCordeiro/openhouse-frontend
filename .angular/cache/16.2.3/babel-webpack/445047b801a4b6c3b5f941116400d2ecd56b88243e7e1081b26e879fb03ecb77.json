{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nclass ToastService {\n  constructor() {\n    this.toasts = [];\n  }\n  show(textOrTpl, options = {}) {\n    this.toasts.push({\n      textOrTpl,\n      ...options\n    });\n    console.log('chegou aqui');\n  }\n  remove(toast) {\n    this.toasts = this.toasts.filter(t => t !== toast);\n  }\n  clear() {\n    this.toasts.splice(0, this.toasts.length);\n  }\n}\n_class = ToastService;\n_class.ɵfac = function ToastService_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});\nexport { ToastService };","map":{"version":3,"names":["ToastService","constructor","toasts","show","textOrTpl","options","push","console","log","remove","toast","filter","t","clear","splice","length","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Daniel\\Documents\\Open House\\openhouse-frontend\\src\\app\\toast\\toast.service.ts"],"sourcesContent":["import { Injectable, TemplateRef } from '@angular/core';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class ToastService {\r\n\ttoasts: any[] = [];\r\n\r\n\tshow(textOrTpl: string | TemplateRef<any>, options: any = {}) {\r\n\t\tthis.toasts.push({ textOrTpl, ...options });\r\n    console.log('chegou aqui');\r\n\t}\r\n\r\n\tremove(toast: any) {\r\n\t\tthis.toasts = this.toasts.filter((t) => t !== toast);\r\n\t}\r\n\r\n\tclear() {\r\n\t\tthis.toasts.splice(0, this.toasts.length);\r\n\t}\r\n}\r\n"],"mappings":";;AAEA,MACaA,YAAY;EADzBC,YAAA;IAEC,KAAAC,MAAM,GAAU,EAAE;;EAElBC,IAAIA,CAACC,SAAoC,EAAEC,OAAA,GAAe,EAAE;IAC3D,IAAI,CAACH,MAAM,CAACI,IAAI,CAAC;MAAEF,SAAS;MAAE,GAAGC;IAAO,CAAE,CAAC;IACzCE,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;EAC7B;EAEAC,MAAMA,CAACC,KAAU;IAChB,IAAI,CAACR,MAAM,GAAG,IAAI,CAACA,MAAM,CAACS,MAAM,CAAEC,CAAC,IAAKA,CAAC,KAAKF,KAAK,CAAC;EACrD;EAEAG,KAAKA,CAAA;IACJ,IAAI,CAACX,MAAM,CAACY,MAAM,CAAC,CAAC,EAAE,IAAI,CAACZ,MAAM,CAACa,MAAM,CAAC;EAC1C;;SAdYf,YAAY;;mBAAZA,MAAY;AAAA;;SAAZA,MAAY;EAAAgB,OAAA,EAAZhB,MAAY,CAAAiB,IAAA;EAAAC,UAAA,EADC;AAAM;SACnBlB,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}
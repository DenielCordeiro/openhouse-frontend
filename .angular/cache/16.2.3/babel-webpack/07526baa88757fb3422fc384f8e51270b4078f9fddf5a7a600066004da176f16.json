{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet AppComponent = class AppComponent {\n  constructor(listItemsService, toastService) {\n    this.listItemsService = listItemsService;\n    this.toastService = toastService;\n    this.toDoListChecked = 'to-do-list-checked';\n  }\n  ngOnInit() {\n    this.getAllLists();\n  }\n  getAllLists() {\n    this.gettingListItemsKitchen();\n    this.gettingListItemsRoom();\n    this.gettingListItemsServiceArea();\n    this.gettingListItemsBathroom();\n  }\n  gettingListItemsKitchen() {\n    this.listItemsService.getListKitchen().subscribe(items => {\n      this.itemsKitchen = items;\n    });\n  }\n  gettingListItemsRoom() {\n    this.listItemsService.getListRoom().subscribe(items => {\n      this.itemsRoom = items;\n    });\n  }\n  gettingListItemsServiceArea() {\n    this.listItemsService.getListServiceArea().subscribe(items => {\n      this.itemsServiceArea = items;\n    });\n  }\n  gettingListItemsBathroom() {\n    this.listItemsService.getListBathroom().subscribe(items => {\n      this.itemsBathroom = items;\n    });\n  }\n  updatingItem(id, value) {\n    if (value == true) {\n      this.listItemsService.updateItem(id, value = false);\n    } else {\n      this.listItemsService.updateItem(id, value = true);\n    }\n    this.getAllLists();\n  }\n  showSuccess() {\n    this.toastService.show('I am a success toast', {\n      classname: 'bg-success text-light',\n      delay: 10000\n    });\n  }\n  ngOnDestroy() {\n    this.toastService.clear();\n  }\n};\nAppComponent = __decorate([Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.sass']\n})], AppComponent);\nexport { AppComponent };","map":{"version":3,"names":["Component","AppComponent","constructor","listItemsService","toastService","toDoListChecked","ngOnInit","getAllLists","gettingListItemsKitchen","gettingListItemsRoom","gettingListItemsServiceArea","gettingListItemsBathroom","getListKitchen","subscribe","items","itemsKitchen","getListRoom","itemsRoom","getListServiceArea","itemsServiceArea","getListBathroom","itemsBathroom","updatingItem","id","value","updateItem","showSuccess","show","classname","delay","ngOnDestroy","clear","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\Daniel\\Documents\\Open House\\openhouse-frontend\\src\\app\\app.component.ts"],"sourcesContent":["import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ListItemsService } from './service/list-items.service';\nimport { ListItemsModel } from './model/list-items.model';\nimport { ToastService } from './toast/toast.service';\n\nexport interface ToastInfo {\n  header: string;\n  body: string;\n  delay?: number;\n}\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.sass'],\n})\nexport class AppComponent implements OnInit, OnDestroy {\n  itemsKitchen!: ListItemsModel[];\n  itemsRoom!: ListItemsModel[];\n  itemsServiceArea!: ListItemsModel[];\n  itemsBathroom!: ListItemsModel[];\n  toDoListChecked: string = 'to-do-list-checked';\n\n  constructor(\n    public listItemsService: ListItemsService,\n    public toastService: ToastService\n  ) { }\n\n  ngOnInit(): void {\n    this.getAllLists();\n  }\n\n  getAllLists(): void {\n    this.gettingListItemsKitchen();\n    this.gettingListItemsRoom();\n    this.gettingListItemsServiceArea();\n    this.gettingListItemsBathroom();\n  }\n\n  gettingListItemsKitchen(): void {\n    this.listItemsService.getListKitchen().subscribe(items => {\n      this.itemsKitchen = items;\n    });\n  }\n\n  gettingListItemsRoom(): void {\n    this.listItemsService.getListRoom().subscribe(items => {\n      this.itemsRoom = items;\n    });\n  }\n\n  gettingListItemsServiceArea(): void {\n    this.listItemsService.getListServiceArea().subscribe(items => {\n      this.itemsServiceArea = items;\n    });\n  }\n\n  gettingListItemsBathroom(): void {\n    this.listItemsService.getListBathroom().subscribe(items => {\n      this.itemsBathroom = items;\n    });\n  }\n\n  updatingItem(id: any, value: any): void {\n    if (value == true) {\n      this.listItemsService.updateItem(id, value = false);\n    } else {\n      this.listItemsService.updateItem(id, value = true);\n    }\n\n    this.getAllLists();\n  }\n\n\n\tshowSuccess() {\n\t\tthis.toastService.show('I am a success toast', { classname: 'bg-success text-light', delay: 10000 });\n\t}\n\n\tngOnDestroy(): void {\n\t\tthis.toastService.clear();\n\t}\n\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAA2B,eAAe;AAgBrD,IAAMC,YAAY,GAAlB,MAAMA,YAAY;EAOvBC,YACSC,gBAAkC,EAClCC,YAA0B;IAD1B,KAAAD,gBAAgB,GAAhBA,gBAAgB;IAChB,KAAAC,YAAY,GAAZA,YAAY;IAJrB,KAAAC,eAAe,GAAW,oBAAoB;EAK1C;EAEJC,QAAQA,CAAA;IACN,IAAI,CAACC,WAAW,EAAE;EACpB;EAEAA,WAAWA,CAAA;IACT,IAAI,CAACC,uBAAuB,EAAE;IAC9B,IAAI,CAACC,oBAAoB,EAAE;IAC3B,IAAI,CAACC,2BAA2B,EAAE;IAClC,IAAI,CAACC,wBAAwB,EAAE;EACjC;EAEAH,uBAAuBA,CAAA;IACrB,IAAI,CAACL,gBAAgB,CAACS,cAAc,EAAE,CAACC,SAAS,CAACC,KAAK,IAAG;MACvD,IAAI,CAACC,YAAY,GAAGD,KAAK;IAC3B,CAAC,CAAC;EACJ;EAEAL,oBAAoBA,CAAA;IAClB,IAAI,CAACN,gBAAgB,CAACa,WAAW,EAAE,CAACH,SAAS,CAACC,KAAK,IAAG;MACpD,IAAI,CAACG,SAAS,GAAGH,KAAK;IACxB,CAAC,CAAC;EACJ;EAEAJ,2BAA2BA,CAAA;IACzB,IAAI,CAACP,gBAAgB,CAACe,kBAAkB,EAAE,CAACL,SAAS,CAACC,KAAK,IAAG;MAC3D,IAAI,CAACK,gBAAgB,GAAGL,KAAK;IAC/B,CAAC,CAAC;EACJ;EAEAH,wBAAwBA,CAAA;IACtB,IAAI,CAACR,gBAAgB,CAACiB,eAAe,EAAE,CAACP,SAAS,CAACC,KAAK,IAAG;MACxD,IAAI,CAACO,aAAa,GAAGP,KAAK;IAC5B,CAAC,CAAC;EACJ;EAEAQ,YAAYA,CAACC,EAAO,EAAEC,KAAU;IAC9B,IAAIA,KAAK,IAAI,IAAI,EAAE;MACjB,IAAI,CAACrB,gBAAgB,CAACsB,UAAU,CAACF,EAAE,EAAEC,KAAK,GAAG,KAAK,CAAC;KACpD,MAAM;MACL,IAAI,CAACrB,gBAAgB,CAACsB,UAAU,CAACF,EAAE,EAAEC,KAAK,GAAG,IAAI,CAAC;;IAGpD,IAAI,CAACjB,WAAW,EAAE;EACpB;EAGDmB,WAAWA,CAAA;IACV,IAAI,CAACtB,YAAY,CAACuB,IAAI,CAAC,sBAAsB,EAAE;MAAEC,SAAS,EAAE,uBAAuB;MAAEC,KAAK,EAAE;IAAK,CAAE,CAAC;EACrG;EAEAC,WAAWA,CAAA;IACV,IAAI,CAAC1B,YAAY,CAAC2B,KAAK,EAAE;EAC1B;CAEA;AAlEY9B,YAAY,GAAA+B,UAAA,EALxBhC,SAAS,CAAC;EACTiC,QAAQ,EAAE,UAAU;EACpBC,WAAW,EAAE,sBAAsB;EACnCC,SAAS,EAAE,CAAC,sBAAsB;CACnC,CAAC,C,EACWlC,YAAY,CAkExB;SAlEYA,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/Daniel/Documents/Open House/openhouse-frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _class;\nimport { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass ListItemsService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:3334/items';\n    this.httpOptions = {\n      Headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n  }\n  getList() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      let list = {};\n      _this.http.get(_this.apiUrl).subscribe(data => {\n        console.log('data: ', data);\n        // if (data != null) {\n        //   list = data;\n        // } else {\n        //   alert(\"Os dados da lista estão retornando vazio!\")\n        // }\n      });\n\n      return list;\n    })();\n  }\n  updateItem() {\n    console.log(\"teste da função update no serviço\");\n  }\n}\n_class = ListItemsService;\n_class.ɵfac = function ListItemsService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});\nexport { ListItemsService };","map":{"version":3,"names":["HttpHeaders","ListItemsService","constructor","http","apiUrl","httpOptions","Headers","getList","_this","_asyncToGenerator","list","get","subscribe","data","console","log","updateItem","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Daniel\\Documents\\Open House\\openhouse-frontend\\src\\app\\service\\list-items.service.ts"],"sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ListItemsService {\n  apiUrl: string = 'http://localhost:3334/items';\n\n  httpOptions: {} = {\n    Headers: new HttpHeaders({\n      'Content-Type': 'application/json'\n    })\n  };\n\n  constructor(private http : HttpClient) { }\n\n  async getList(): Promise<{}> {\n    let list = {};\n\n    this.http.get(this.apiUrl).subscribe(data => {\n\n      console.log('data: ', data);\n\n      // if (data != null) {\n      //   list = data;\n      // } else {\n      //   alert(\"Os dados da lista estão retornando vazio!\")\n      // }\n    });\n\n    return list;\n  }\n\n  updateItem() {\n    console.log(\"teste da função update no serviço\");\n  }\n}\n"],"mappings":";;AAAA,SAAqBA,WAAW,QAAQ,sBAAsB;;;AAG9D,MAGaC,gBAAgB;EAS3BC,YAAoBC,IAAiB;IAAjB,KAAAA,IAAI,GAAJA,IAAI;IARxB,KAAAC,MAAM,GAAW,6BAA6B;IAE9C,KAAAC,WAAW,GAAO;MAChBC,OAAO,EAAE,IAAIN,WAAW,CAAC;QACvB,cAAc,EAAE;OACjB;KACF;EAEwC;EAEnCO,OAAOA,CAAA;IAAA,IAAAC,KAAA;IAAA,OAAAC,iBAAA;MACX,IAAIC,IAAI,GAAG,EAAE;MAEbF,KAAI,CAACL,IAAI,CAACQ,GAAG,CAACH,KAAI,CAACJ,MAAM,CAAC,CAACQ,SAAS,CAACC,IAAI,IAAG;QAE1CC,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEF,IAAI,CAAC;QAE3B;QACA;QACA;QACA;QACA;MACF,CAAC,CAAC;;MAEF,OAAOH,IAAI;IAAC;EACd;EAEAM,UAAUA,CAAA;IACRF,OAAO,CAACC,GAAG,CAAC,mCAAmC,CAAC;EAClD;;SA9BWd,gBAAgB;;mBAAhBA,MAAgB,EAAAgB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;;SAAhBnB,MAAgB;EAAAoB,OAAA,EAAhBpB,MAAgB,CAAAqB,IAAA;EAAAC,UAAA,EAFf;AAAM;SAEPtB,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}